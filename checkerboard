#!/usr/bin/env python2
# -*- coding: utf-8 -*-

"""
Created on Mon Mar  4 15:17:45 2019

@author: martha
"""

import pygame as pg, sys
from pygame.locals import *

pg.init()

screen = pg.display.set_mode((540,540))

def peredit():
    screen.fill((255,255,255))
    for i in range (0,8):
        for j in range(0,8):
            pg.draw.rect(screen,[100,10,255],[i*80,j*80,60,60])
           
    pg.draw.circle(screen,[255,100,100],[270,30],30,0)
    pg.draw.circle(screen,[255,255,100],[270,510],30,0)
    
    pg.display.update()
peredit()


class chese:
    def __init__(self,owner,x,y): #Iinital init
        self.owner = owner
        self.x = x
        self.y = y
        if self.owner:
            self.__color = [255,100,100]
        else:
            self.__color = [255,255,100]
            
    def move(self,x,y):
        pg.draw.circle(screen,[100,10,255],[self.x,self.y],30,0)
        self.x = self.x + x * 80
        self.y = self.y + y * 80
        pg.draw.circle(screen,self.__color,[self.x,self.y],30,0)
        pg.display.update()
    def pr(self): #print function
        print(self.owner,self.x,self.y)
        
class block:
    def __init__(self,owner):
        self.owner = owner#blocks'owner
        self.count = 10 #owner's bloks remain number  origin = 10
        if owner:
            self.__color = [255,100,100]
        else:
            self.__color = [255,255,100]
        
    def palce(self,mode,x,y): #1 vertical 0 horizon
        self.count = self.count - 1
        if mode:  #vertical
            self.x = 60 + (x - 1) * 80
            self.y = y * 80
            pg.draw.rect(screen,self.__color,[self.x,self.y,20,140])
        else:
            self.x = x * 80
            self.y = 60 + (y - 1) * 80
            pg.draw.rect(screen,self.__color,[self.x,self.y,140,20])
        pg.display.update()
            


Mychese = chese(bool(1),270,30)
Enemychese = chese(bool(0),270,510)

Mychese.move(1,1)
Enemychese.move(-1,-1)

print(Mychese.pr())
        
        
        
Myblocks = block(bool(1))
Enemyblocks = block(bool(0))

Myblocks.palce(0,4,4)
print(Myblocks.count)
Enemyblocks.palce(1,4,4)
print(Enemyblocks.count)
        
while(1):
    for event in pg.event.get():
        if event.type == pg.QUIT:
            pg.quit()
            sys.exit()
            
    pg.display.update()
pg.quit()
